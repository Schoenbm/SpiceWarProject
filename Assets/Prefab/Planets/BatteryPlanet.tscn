[gd_scene load_steps=11 format=3 uid="uid://cfekwlvm5wmhs"]

[ext_resource type="Script" path="res://Scripts/planet.gd" id="1_eebny"]
[ext_resource type="Texture2D" uid="uid://bhm7yurck1f4q" path="res://Assets/Sprites/ship2.png" id="2_elt62"]
[ext_resource type="Texture2D" uid="uid://dr208a2gqp0wj" path="res://Assets/Sprites/battery.png" id="3_fowf8"]
[ext_resource type="PackedScene" uid="uid://cin8seu8bis48" path="res://Assets/Prefab/Planets/Shield/Shield.tscn" id="4_d3wny"]

[sub_resource type="CircleShape2D" id="CircleShape2D_3yang"]
radius = 24.1868

[sub_resource type="Shader" id="Shader_bd50y"]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform sampler2D matrices_texture;
uniform sampler2D circle_texture;
uniform float blink_speed;
uniform bool charged = false;

uniform float fade_state = 0;
/* tout est visible a 0, invisible a 0.5*/

uniform float blink_charged_amp = 0;
uniform float blink_charging_amp = 0.05;

uniform float blink_charged_base= 0.40;
uniform float blink_charging_base = 0.9;

uniform vec3 ring_color: source_color = vec3(1.0);
uniform float ring_frequency = 3.0;
/** Portion of the visible rings. Negative values give wider rings, positive values give narrower rings*/
uniform float ring_portion: hint_range(-0.9, 0.9, 0.1) = 0.0;
/** Negative values move the rings outwards, positive value move the rings inwards */
uniform float move_speed = -3.0;


void fragment() {
	vec4 circle_mask = texture(circle_texture, UV);
	vec4 matrices = texture(matrices_texture, UV);
	float dist = distance(UV, vec2(0.5,0.5));
	float rings = sin(dist * ring_frequency + (TIME * move_speed));
	rings = step(ring_portion, rings);
	float blend_alpha = smoothstep(0.5, 0.4, dist);
	
	if(charged)
		COLOR.a = circle_mask.r * (blink_charged_amp * sin(TIME * blink_speed + 1.5)+ blink_charged_base + 0.4 * matrices.r);
	else{
		COLOR.a = circle_mask.r * (blink_charging_amp * sin(TIME * blink_speed + 1.5)+ blink_charging_base + 0.05 * matrices.r);
	}
	
	if (rings > 0.0)
		COLOR.a = COLOR.a + circle_mask.r * ((COLOR.a + 0.05) * 0.7 * matrices.r);
		
	COLOR.a = COLOR.a * smoothstep(fade_state,fade_state * 1.2,dist);
	
}

//void light() {
	// Called for every pixel for every light affecting the CanvasItem.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_dlvog"]
load_path = "res://.godot/imported/circlemask.png-e698f71c1e2c81d3ccf158a4f5970acd.ctex"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_8gyur"]
load_path = "res://.godot/imported/HexEdgeSmol.png-a785bb15c2ec58596af1071f07c16ef7.ctex"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_kcake"]
resource_local_to_scene = true
shader = SubResource("Shader_bd50y")
shader_parameter/blink_speed = 3.0
shader_parameter/charged = false
shader_parameter/fade_state = 0.0
shader_parameter/blink_charged_amp = 0.1
shader_parameter/blink_charging_amp = 0.17
shader_parameter/blink_charged_base = 0.37
shader_parameter/blink_charging_base = 0.3
shader_parameter/ring_color = Color(1, 1, 1, 1)
shader_parameter/ring_frequency = 5.0
shader_parameter/ring_portion = 0.9
shader_parameter/move_speed = -3.0
shader_parameter/matrices_texture = SubResource("CompressedTexture2D_8gyur")
shader_parameter/circle_texture = SubResource("CompressedTexture2D_dlvog")

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_6c3mw"]
load_path = "res://.godot/imported/shield.png-1bf5fb3ebf158fdd741932ea72d4193b.ctex"

[node name="DefensivePlanet" type="Area2D" node_paths=PackedStringArray("shield")]
z_index = 1
collision_layer = 2
collision_mask = 3
script = ExtResource("1_eebny")
ship_speed_production = 0.2
max_ships = 15
auto_find_neighbors = true
radius_neighbors = 250
shield = NodePath("Shield")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_3yang")

[node name="TextEdit" type="TextEdit" parent="."]
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -23.0
offset_top = -80.0
offset_right = 28.0
offset_bottom = -45.0
grow_horizontal = 2
grow_vertical = 2
placeholder_text = "0 / 10"
caret_type = 1
caret_blink_interval = 0.84

[node name="Ship2" type="Sprite2D" parent="."]
scale = Vector2(0.2, 0.2)
texture = ExtResource("2_elt62")

[node name="Battery" type="Sprite2D" parent="."]
position = Vector2(-1, 0)
scale = Vector2(0.02, 0.02)
texture = ExtResource("3_fowf8")

[node name="Shield" parent="." instance=ExtResource("4_d3wny")]
material = SubResource("ShaderMaterial_kcake")
position = Vector2(0, 0)
scale = Vector2(0.0330423, 0.0330423)
texture = SubResource("CompressedTexture2D_6c3mw")
shield_max_capacity = 4

[connection signal="input_event" from="." to="." method="_on_input_event"]
